---
- name: Bootstrap Arch Linux system
  hosts: localhost
  become: yes
  vars_files:
    - play_vars/install-os_vars.yml
  vars_prompt:
    - name: luks_password
      prompt: "luks password"
      private: yes
      confirm: yes
    - name: install_disk
      prompt: "Installation target device (e.g. /dev/sda)"
      private: no
    - name: root_password
      prompt: "root user password"
      private: yes
      encrypt: "sha512_crypt"
      confirm: yes
    - name: user_password
      prompt: "user password"
      private: yes
      encrypt: "sha512_crypt"
      confirm: yes
  pre_tasks:
    - set_fact:
        root_password: "{{ root_password }}"
    - set_fact:
        user_password: "{{ user_password }}"
    - name: Update the system clock
      ansible.builtin.command: timedatectl set-ntp true
  roles:
    - facts
    - os-install
  handlers:
    - name: "regenerate initramfs"
      become: yes
      ansible.builtin.command: mkinitcpio -P

- name: Continue Arch Linux installation in chroot
  hosts: localhost_chroot
  pre_tasks:
    - set_fact:
        user_password: "{{ hostvars.localhost.user_password }}"
    - set_fact:
        root_password: "{{ hostvars.localhost.root_password }}"
  roles:
    - { role: localisation, tags: "localisation" }
    - { role: network, tags: "network" }
    - { role: microcode, tags: "microcode" }
    - { role: systemd-boot, tags: "bootloader" }
    - { role: kernel, tags: "kernel" }
    - { role: users, tags: "users" }
  tasks:
    - name: Set root password
      user:
        name: root
        password: "{{ root_password }}"

- name: Finish base OS installation
  hosts: localhost
  become: yes
  vars_files:
    - play_vars/install-os_vars.yml
  tasks:
    - name: Copy maarch to /opt/maarch
      copy:
        src: "{{ playbook_dir }}"
        dest: "{{ arch_root }}/opt/maarch"

    - name: Unmount partitions
      ansible.builtin.command: "umount -Rf {{ arch_root }}"

    - name: Reboot
      ansible.builtin.command: reboot now
