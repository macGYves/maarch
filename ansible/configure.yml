---
- name: Customise a basic arch linux installation
  hosts: localhost
  vars_prompt:
    - name: user_email
      prompt: "Your email address"
      private: false
    - name: yubikey_pin
      prompt: "YubiKey authenticator PIN"
      private: true
  pre_tasks:
    - name: Set facts
      tags: "always"
      block:
        - name: Save LUKS device UUID in fact
          become: true
          ansible.builtin.set_fact:
            luks_device_uuid: "{{ ansible_device_links.uuids[item.key] | first }}"
          loop: "{{ ansible_device_links.labels | dict2items }}"
          when: partitions.luks.label in item.value
          changed_when: false

        - name: Set fact has_intel_cpu
          ansible.builtin.set_fact:
            has_intel_cpu: "{{ 'GenuineIntel' in ansible_processor }}"

        - name: Set fact intel_cpu_gen
          ansible.builtin.set_fact:
            intel_cpu_gen: "
              {{ ansible_processor | unique | select('match', '^\\d+(st|nd|rd|th)?\\s+Gen\\s+Intel.*') | first \
              | regex_replace('^(\\d+).*$', '\\1') }}"

        - name: Set fact username
          ansible.builtin.set_fact:
            username: "{{ ansible_user_id }}"
  roles:
    - { role: ssh, tags: "ssh" }
    - { role: dotfiles, tags: "dotfiles" }
    - { role: time, tags: "time" }
    - { role: network, tags: "network" }
    - { role: users, tags: "users" }
    - { role: l10n, tags: "l10n" }
    - { role: reflector, tags: "reflector" }
    - { role: ssd, tags: "ssd", when: features.ssd }
    - { role: power_mgmt, tags: "power_mgmt" }
    - { role: firewall, tags: "firewall" }
    - { role: bluetooth, tags: "bluetooth" }
    - { role: yubikey, tags: "yubikey" }
    - { role: packages, tags: "packages" }
    - { role: firefox, tags: "firefox" }
    - { role: yay, tags: "yay" }
    - { role: fonts, tags: "fonts" }
    - { role: shell, tags: "shell" }
    - { role: flatpak, tags: "flatpak" }
    - { role: snapd, tags: "snapd" }
    - { role: gnome, tags: "gnome" }
    - { role: xdg_user_dirs, tags: "xdg_user_dirs" }
    - { role: dev_tools, tags: "dev-tools" }
    - { role: themes, tags: "themes" }
    - { role: office, tags: "office" }
    - { role: digikam, tags: "digikam" }
    - { role: virtualbox, tags: "virtualbox", when: not features.vbox_guest }
    - { role: hibernation, tags: "hibernation", when: features.hibernation }
    - { role: systemd_boot, tags: "hibernation, systemd_boot" }
    - { role: kernel, tags: "hibernation, kernel" }
    - { role: cleanup, tags: "cleanup" }
  handlers:
    - name: "Regenerate initramfs"
      become: true
      ansible.builtin.command: mkinitcpio -P
      changed_when: true
