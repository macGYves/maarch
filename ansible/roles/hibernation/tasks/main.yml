---
- name: "Create btrfs subvolume {{ swapfile.path }}"
  become: yes
  ansible.builtin.command: btrfs filesystem mkswapfile --size "{{ swapfile.size}}" --uuid clear "{{ swapfile.path }}"
  args:
    creates: "{{ swapfile.path }}"

- name: Activate the swap file
  become: yes
  ansible.builtin.command: swapon "{{ swapfile.path }}"

- name: Add entry to /etc/fstab
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ swapfile.path }} none swap defaults 0.0"

- name: Register swap_file_offset
  become: yes
  ansible.builtin.command: btrfs inspect-internal map-swapfile -r "{{ swapfile.path }}"
  changed_when: false
  register: swap_file_offset

- name: Register swap_file_uuid
  become: yes
  ansible.builtin.command: findmnt -no UUID -T "{{ swapfile.path }}"
  changed_when: false
  register: swap_file_uuid

- name: Add resume parameter to /etc/mkinitcpio.conf
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: '^HOOKS=(.*)(?<!resume)\s+fsck(.*)$'
    line: 'HOOKS=\1 resume fsck\2'
    backrefs: yes
  notify:
    - "regenerate initramfs"

- name: Update bootloader entry
  #TODO: improve. Do not drop everything after resume=.
  become: yes
  ansible.builtin.lineinfile:
    path: /boot/loader/entries/arch.conf
    regexp: '^options\s+(.*?)(resume=UUID={{ swap_file_uuid }} resume_offset={{ swap_file_offset }})$'
    line: 'options=\1 resume=UUID={{ swap_file_uuid }} resume_offset={{ swap_file_offset }}'
    backrefs: yes
